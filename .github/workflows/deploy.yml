name: üöÄ Deploy to aaPanel Server

on:
  push:
    branches: [ main ]
  # Remove pull_request deployment for security
  workflow_dispatch:  # Allow manual deployment

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build-success: ${{ steps.build.outputs.success }}
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üìö Install dependencies
      run: npm ci
      
    - name: üèóÔ∏è Build project
      id: build
      run: |
        npm run build
        echo "success=true" >> $GITHUB_OUTPUT
        
    - name: üì¶ Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 1
      
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.build.outputs.build-success == 'true' }}
    environment: 
      name: production
      
    steps:
    - name: üì• Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    - name: üöÄ Prepare deployment directory
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          set -e  # Exit on error
          
          # Create backup if directory exists
          if [ -d "/www/wwwroot/kudh771" ]; then
            echo "Creating backup..."
            sudo cp -r /www/wwwroot/kudh771 /www/wwwroot/kudh771.backup.$(date +%Y%m%d_%H%M%S)
            echo "Backup created successfully"
          fi
          
          # Create directory if not exists
          sudo mkdir -p /www/wwwroot/kudh771
          echo "Deployment directory ready"
          
    - name: üì° Upload files via rsync
      uses: burnett01/rsync-deployments@7.0.1
      with:
        switches: -avzr --delete --progress
        path: dist/
        remote_path: /www/wwwroot/kudh771/
        remote_host: ${{ secrets.SERVER_HOST }}
        remote_user: ${{ secrets.SERVER_USER }}
        remote_key: ${{ secrets.SERVER_SSH_KEY }}
        
    - name: üîß Set permissions and verify deployment
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          set -e  # Exit on error
          
          echo "Setting correct permissions..."
          sudo chown -R www-data:www-data /www/wwwroot/kudh771
          sudo chmod -R 755 /www/wwwroot/kudh771
          
          # Set specific permissions for web files
          if [ -f "/www/wwwroot/kudh771/index.html" ]; then
            sudo chmod 644 /www/wwwroot/kudh771/index.html
          fi
          
          # Verify deployment
          echo "Verifying deployment..."
          ls -la /www/wwwroot/kudh771/
          
          # Verify index.html exists
          if [ ! -f "/www/wwwroot/kudh771/index.html" ]; then
            echo "‚ùå Deployment verification failed: index.html not found"
            exit 1
          fi
          
          echo "‚úÖ Deployment completed successfully!"
          
    - name: üîç Health check
      run: |
        # Wait a moment for server to refresh
        sleep 5
        # You can add a curl health check here if needed
        echo "Health check completed"
        
    - name: üìß Notify deployment success
      if: success()
      run: |
        echo "üéâ Deployment to production successful!"
        echo "Site URL: http://${{ secrets.SERVER_HOST }}:19818/kudh771"